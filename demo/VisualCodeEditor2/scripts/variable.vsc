<Script>
  <Class type="ScratchNet.Script, VisualCodeEditor">
    <Variables />
    <Functions>
      <Function type="ScratchNet.FunctionDeclaration, ScriptEngine" x="371.566666666667" y="127.5">
        <Format value="" />
        <Params type="System.Collections.Generic.List`1[ScratchNet.Parameter]" />
        <Name value="main" />
        <Body type="ScratchNet.BlockStatement">
          <BlockStatement type="ScratchNet.BlockStatement, ScriptEngine">
            <Body>
              <Statement type="ScratchNet.CommentStatement, ScriptEngine">
                <Comment value="define an integer" />
                <AllowMultiLine value="False" />
              </Statement>
              <Statement type="ScratchNet.ExpressionStatement, ScriptEngine">
                <Expression type="ScratchNet.VariableDeclarationExpression">
                  <Expression type="ScratchNet.VariableDeclarationExpression, ScriptEngine">
                    <CanAssignValue value="True" />
                    <Variable>
                      <Expression type="ScratchNet.Identifier, ScriptEngine">
                        <Variable value="a" />
                      </Expression>
                    </Variable>
                    <Value>
                      <Expression type="ScratchNet.Literal, ScriptEngine">
                        <Raw value="1" />
                      </Expression>
                    </Value>
                  </Expression>
                </Expression>
              </Statement>
              <Statement type="ScratchNet.CommentStatement, ScriptEngine">
                <Comment value="define a float number" />
                <AllowMultiLine value="False" />
              </Statement>
              <Statement type="ScratchNet.ExpressionStatement, ScriptEngine">
                <Expression type="ScratchNet.VariableDeclarationExpression">
                  <Expression type="ScratchNet.VariableDeclarationExpression, ScriptEngine">
                    <CanAssignValue value="True" />
                    <Variable>
                      <Expression type="ScratchNet.Identifier, ScriptEngine">
                        <Variable value="b" />
                      </Expression>
                    </Variable>
                    <Value>
                      <Expression type="ScratchNet.Literal, ScriptEngine">
                        <Raw value="1.5" />
                      </Expression>
                    </Value>
                  </Expression>
                </Expression>
              </Statement>
              <Statement type="ScratchNet.CommentStatement, ScriptEngine">
                <Comment value="define a boolean value" />
                <AllowMultiLine value="False" />
              </Statement>
              <Statement type="ScratchNet.ExpressionStatement, ScriptEngine">
                <Expression type="ScratchNet.VariableDeclarationExpression">
                  <Expression type="ScratchNet.VariableDeclarationExpression, ScriptEngine">
                    <CanAssignValue value="True" />
                    <Variable>
                      <Expression type="ScratchNet.Identifier, ScriptEngine">
                        <Variable value="c" />
                      </Expression>
                    </Variable>
                    <Value>
                      <Expression type="ScratchNet.Literal, ScriptEngine">
                        <Raw value="false" />
                      </Expression>
                    </Value>
                  </Expression>
                </Expression>
              </Statement>
              <Statement type="ScratchNet.CommentStatement, ScriptEngine">
                <Comment value="define a string" />
                <AllowMultiLine value="False" />
              </Statement>
              <Statement type="ScratchNet.ExpressionStatement, ScriptEngine">
                <Expression type="ScratchNet.VariableDeclarationExpression">
                  <Expression type="ScratchNet.VariableDeclarationExpression, ScriptEngine">
                    <CanAssignValue value="True" />
                    <Variable>
                      <Expression type="ScratchNet.Identifier, ScriptEngine">
                        <Variable value="d" />
                      </Expression>
                    </Variable>
                    <Value>
                      <Expression type="ScratchNet.Literal, ScriptEngine">
                        <Raw value="&quot;hello world&quot;" />
                      </Expression>
                    </Value>
                  </Expression>
                </Expression>
              </Statement>
              <Statement type="ScratchNet.CommentStatement, ScriptEngine">
                <Comment value="define an array, length of 5" />
                <AllowMultiLine value="False" />
              </Statement>
              <Statement type="ScratchNet.ExpressionStatement, ScriptEngine">
                <Expression type="ScratchNet.VariableDeclarationExpression">
                  <Expression type="ScratchNet.VariableDeclarationExpression, ScriptEngine">
                    <CanAssignValue value="True" />
                    <Variable>
                      <Expression type="ScratchNet.Identifier, ScriptEngine">
                        <Variable value="e" />
                      </Expression>
                    </Variable>
                    <Value>
                      <Expression type="ScratchNet.NewArrayExpression, Array">
                        <Length>
                          <Expression type="ScratchNet.Literal, ScriptEngine">
                            <Raw value="5" />
                          </Expression>
                        </Length>
                      </Expression>
                    </Value>
                  </Expression>
                </Expression>
              </Statement>
            </Body>
          </BlockStatement>
        </Body>
        <ShowFunctionName value="True" />
      </Function>
    </Functions>
    <Handlers />
    <Expressions />
    <BlockStatements>
      <BlockStatement type="ScratchNet.BlockStatement, ScriptEngine" x="158.233333333333" y="119.5">
        <Body />
      </BlockStatement>
    </BlockStatements>
  </Class>
</Script>